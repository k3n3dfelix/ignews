// import { GetServerSideProps } from 'next';
import { GetStaticProps } from 'next';
import Head from 'next/head'
import Image from 'next/image'
import styles from './home.module.scss'
import { SubscribeButton } from '@/components/SubscribeButton'
import { stripe } from '@/services/stripe';

// Client Side
//Server Side
//Static SiteGeneration

//Post do Blog

//Conteudo (SSG)
//Comentarios (Client Side)

interface HomeProps {
  product: {
    priceId: string;
    amount: number;
  }
}

export default function Home({ product}: HomeProps ) {
  return (
    <>
      <Head>
        <title>Home |  ig.news</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.contentContainer}>
        <section className={styles.hero}>
          <span> üëè Hey, welcome</span>
          <h1>News about the <span>React</span> world.</h1>
          <p>
            Get access to all the publications <br />
            <span>for {product.amount} month</span>
          </p>
          <SubscribeButton priceId={product.priceId}/>
        </section>
        <img src="images/avatar.svg" alt="Girl Coding"/>
      </main>
    </>
  )
}

// export const getServerSideProps: GetServerSideProps = async () => {
//   const price = await stripe.prices.retrieve('price_1MTWQlD4oAA1Kc4VGEVw1kfj', {
//     expand: ['product']
//   })

//   const product = {
//     priceId: price.id,
//     amount: new Intl.NumberFormat('en-US', {
//       style: 'currency',
//       currency: 'USD',
//     }).format(price.unit_amount / 100),
//   };
//   return {
//     props: {
//       product
//     }
//   }
// }
export const getStaticProps: GetStaticProps = async () => {
  const price = await stripe.prices.retrieve('price_1MTWQlD4oAA1Kc4VGEVw1kfj', {
    expand: ['product']
  })

  const product = {
    priceId: price.id,
    amount: new Intl.NumberFormat('en-US', {
      style: 'currency',
      currency: 'USD',
    }).format(price.unit_amount / 100),
  };
  return {
    props: {
      product
    },
    revalidate: 60 * 60 * 24, //24 hours
  }
}
